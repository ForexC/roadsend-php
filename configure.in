#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.61)
AC_INIT(roadsend-pcc)
AC_CONFIG_SRCDIR([runtime/opaque-math.h])
AC_CONFIG_HEADER([runtime/config.h])

AH_TEMPLATE(HAVE_PCRE,[perl compatible regular expressions])
AH_TEMPLATE(HAVE_FCGI,[FastCGI web backend support])
AH_TEMPLATE(PCC_OS,[target os])

# Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_CANONICAL_SYSTEM

# bigloo
#AC_MSG_CHECKING([for a proper version of bigloo])
#BIGLOO_VERSION=`bigloo -revision`
#if [
#AC_MSG_RESULT([$bversion])
AC_CHECK_PROG_VER([HAVE_BIGLOO],[bigloo],[-revision],[3.0],[yes],[no])


# Checks for libraries.
#AC_CHECK_LIB([curl], [curl_version])
#AC_CHECK_LIB([fcgi], [FCGX_Accept_r])
#AC_CHECK_LIB([sqlite3], [sqlite3_open])

# Arguments 
AC_ARG_ENABLE(cgi, AS_HELP_STRING([--enable-cgi],[build with (normal) cgi support]),enable_cgi=$enableval,enable_cgi=yes)
#AC_ARG_ENABLE(gtk, AS_HELP_STRING([--enable-gtk],[build with PHP-GTK 1 support]),enable_gtk=$enableval,enable_gtk=auto)
#AC_ARG_ENABLE(gtk2, AS_HELP_STRING([--enable-gtk2],[build with PHP-GTK 2 support (experimental)]),enable_gtk2=$enableval,enable_gtk2=auto)
#AC_ARG_ENABLE(mysql, AS_HELP_STRING([--enable-mysql],[build with MySQL support]),enable_mysql=$enableval,enable_mysql=auto)
#AC_ARG_ENABLE(odbc, AS_HELP_STRING([--enable-odbc],[build with ODBC support]),enable_odbc=$enableval,enable_odbc=auto)
#AC_ARG_ENABLE(sqlite, AS_HELP_STRING([--enable-sqlite],[build with SQLite3 support]),enable_sqlite=$enableval,enable_sqlite=auto)
#AC_ARG_ENABLE(xml, AS_HELP_STRING([--enable-xml],[build with libxml2 support]),enable_xml=$enableval,enable_xml=auto)


# PCRE
AC_ARG_WITH([pcre],
  [AS_HELP_STRING([--with-pcre],
     [support pcre extension @<:@default=check@:>@])],
  [],
  [with_pcre=check])
          
PCRE_LIBS=
  AS_IF([test "x$with_pcre" != xno],
        [AC_CHECK_LIB([pcre], [pcre_exec],
	  [AC_SUBST([PCRE_LIBS], ["-lpcre"])
	   with_pcre=yes
           AC_DEFINE([HAVE_PCRE], [1], [Define if you have pcre])
          ],
          [if test "x$with_pcre" != xcheck; then
           AC_MSG_FAILURE(
            [--with-pcre was given, but test for pcre failed])
           fi
          ])
        ])

# FASTCGI
AC_ARG_WITH([fcgi],
  [AS_HELP_STRING([--with-fcgi],
     [support FastCGI web backend @<:@default=check@:>@])],
  [],
  [with_fcgi=check])
          
FCGI_LIBS=
  AS_IF([test "x$with_fcgi" != xno],
        [AC_CHECK_LIB([fcgi], [FCGX_Accept_r],
          [AC_SUBST([FCGI_LIBS], ["-lfcgi"])
	   with_fcgi=yes
           AC_DEFINE([HAVE_FCGI], [1],[Define if you have FastCGI])
          ],
          [if test "x$with_fcgi" != xcheck; then
           AC_MSG_FAILURE(
            [--with-fcgi was given, but test for FastCGI failed])
           fi
	   with_fcgi=no
          ])
        ])

# XML
AC_ARG_WITH([xml],
  [AS_HELP_STRING([--with-xml],
     [support xml extension @<:@default=check@:>@])],
  [],
  [with_xml=check])
          
XML_LIBS=
  AS_IF([test "x$with_xml" != xno],
        [AC_CHECK_LIB([xml], [xmlParseChunk],
          [AC_SUBST([XML_LIBS], ["-lxml2"])
	   with_xml=yes
           AC_DEFINE([HAVE_XML], [1],[Define if you have libxml2])
          ],
          [if test "x$with_xml" != xcheck; then
           AC_MSG_FAILURE(
            [--with-xml was given, but test for libxml2 failed])
           fi
	   with_xml=no
          ])
        ])



# target OS
case "$target_os" in 
linux*)
#	AC_MSG_NOTICE([configuring for linux]) 
	AC_DEFINE(PCC_OS, ["PCC_LINUX"])
	PCC_OS="PCC_LINUX"
	;;
freebsd*)
#	AC_MSG_NOTICE([configuring for FreeBSD])
	AC_DEFINE(PCC_OS, ["PCC_FREEBSD"])
	PCC_OS="PCC_FREEBSD"
	;;
mingw*)
#	AC_MSG_NOTICE([configuring for windows/mingw])
	AC_DEFINE(PCC_OS, ["PCC_MINGW"])
	PCC_OS="PCC_MINGW"
	;;
*)
	AC_MSG_NOTICE([unknown/unsupported target operating system: $target_os])
esac

# Checks for header files.
AC_HEADER_RESOLV
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h fcntl.h limits.h malloc.h netdb.h netinet/in.h stddef.h stdlib.h string.h sys/socket.h sys/time.h syslog.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STAT
AC_C_CONST
AC_TYPE_UID_T
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_C_RESTRICT
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_CHECK_TYPES([ptrdiff_t])

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_FUNC_STAT
AC_CHECK_FUNCS([gethostbyname inet_ntoa memchr memmove memset select socket strcasecmp strchr strerror strstr strtol])

# Substitutions
AC_SUBST(PCC_OS, $PCC_OS)
AC_CONFIG_FILES([Makefile.config])

#AC_CONFIG_SUBDIRS([tools/libwebserver])
AC_OUTPUT


dnl ==========================================================================
echo "
                    Roadsend PHP Configuration Summary
                  ======================================

	prefix:                   ${prefix}
        libdir:                   ${libdir}
        bindir:                   ${bindir}
        mandir:                   ${mandir}
	source code location:	  ${srcdir}

	c compiler:		  ${CC}
	cflags:		          ${CFLAGS}
	
	bigloo version:		  ${BIGLOO_VERSION}

	= Web Backends =

	MicroServer:		  always enabled
	Normal CGI:		  ${enable_cgi}
        FastCGI extension:        ${with_fcgi}
    
        = Extensions =

	Standard:		  always enabled
        PCRE:                     ${with_pcre}
	MySQL:			  ${with_mysql}
	XML:			  ${with_xml}
	CURL:			  ${with_curl}
	SQLite:			  ${with_sqlite}
	ODBC:			  ${with_odbc}
	PHP-GTK 1:		  ${with_gtk}
	PHP-GTK 2:		  ${with_gtk2}
	PCC-WIN:		  ${with_pccwin}

"

echo "
XXXXXXXXXX
This build/configuration system is still alpha quality.
You're tempting fate if you do anything with this script as root!
XXXXXXXXXX
"
