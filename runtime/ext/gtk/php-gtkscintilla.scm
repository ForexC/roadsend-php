;; ***** BEGIN LICENSE BLOCK *****
;; Roadsend PHP Compiler Runtime Libraries
;; Copyright (C) 2007 Roadsend, Inc.
;;
;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation; either version 2.1
;; of the License, or (at your option) any later version.
;; 
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU Lesser General Public License for more details.
;; 
;; You should have received a copy of the GNU Lesser General Public License
;; along with this program; if not, write to the Free Software
;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
;; ***** END LICENSE BLOCK *****
(module php-gtkscintilla-lib
   (load (php-macros "../../../php-macros.scm"))
   (load (php-gtk-macros "php-gtk-macros.sch"))
   (library php-runtime)
   (import (gtk-binding "cigloo/gtk.scm")
	   (gtkscintilla-binding "cigloo/gtkscintilla.scm")
	   (php-gtk-common-lib "php-gtk-common.scm")
	   (define-classes "define-classes.scm"))
   (export (init-php-gtkscintilla-lib))
   (extern
    (include "gtkscintilla.h"))
   )

(define (init-php-gtkscintilla-lib)
   1)

(defmethod GtkScintilla (GtkScintilla)
   (gtk-object-init! $this (gtk_scintilla_new)))
		     
;    (let ((it (gtk_scintilla_new)))
;       (if (foreign-null? it)
; 	  (begin
; 	     (php-error "could not create GtkScintilla object")
; 	     ;; these retvals aren't used, but maybe oughtta be
; 	     FALSE)
; 	  (begin
; 	     (gtk-object-set! $this it)
; 	     TRUE))))

(def-pgtk-methods GtkScintilla gtk_scintilla
   ((get_wrap_mode :return-type int))
   (set_wrap_mode (wrap_mode :gtk-type int))
   (set_lexer_language (language :gtk-type const-char*))
   (set_keywords (keyword_set :gtk-type int) (key_words :gtk-type const-char*))
   (set_property (key :gtk-type const-char*) (value :gtk-type const-char*))
   (colourise (start :gtk-type long) (end :gtk-type long))
   ((get_lexer :return-type int))
   (set_lexer (lexer :gtk-type int))
   (stop_record)
   (start_record)
   (grab_focus)
   (del_line_right)
   (del_line_left)
   (set_visible_policy (visible_policy :gtk-type int) (visible_slop :gtk-type int))
   (word_part_right_extend)
   (word_part_right)
   (word_part_left_extend)
   (word_part_left)
   ((get_cursor :return-type int))
   (set_cursor (cursor_type :gtk-type int))
   ((get_mouse_down_captures :return-type int))
   (set_mouse_down_captures (captures :gtk-type int))
   ((get_status :return-type int))
   (set_status (status_code :gtk-type int))
   ((get_focus :return-type int))
   (set_focus (focus :gtk-type int))
   ((get_mod_event_mask :return-type int))
   (release_document (doc :gtk-type int))
   (add_ref_document (doc :gtk-type int))
   ((create_document :return-type int))
   ((get_zoom :return-type int))
   (set_zoom (zoom :gtk-type int))
   ((selection_is_rectangle :return-type int))
   (use_pop_up (allow_pop_up :gtk-type int))
   ((lines_on_screen :return-type int))
   (set_caret_policy (caret_policy :gtk-type int) (caret_slop :gtk-type int))
   ((search_prev :return-type int) (flags :gtk-type int) (text :gtk-type const-char*))
   ((search_next :return-type int) (flags :gtk-type int) (text :gtk-type const-char*))
   (search_anchor)
   (set_edge_colour (edge_colour :gtk-type long))
   ((get_edge_colour :return-type long))
   (set_edge_mode (mode :gtk-type int))
   ((get_edge_mode :return-type int))
   (set_edge_column (column :gtk-type int))
   ((get_edge_column :return-type int))
   (set_mod_event_mask (mask :gtk-type int))
   (set_doc_pointer (pointer :gtk-type int))
   ((get_doc_pointer :return-type int))
   (set_view_eol (visible :gtk-type int))
   ((get_view_eol :return-type int))
   ((brace_match :return-type long) (pos :gtk-type long))
   (brace_bad_light (pos :gtk-type long))
   (brace_highlight (pos1 :gtk-type long) (pos2 :gtk-type long))
   ((line_length :return-type int) (line :gtk-type int))
   (move_caret_inside_view)
   (line_scroll_up)
   (line_scroll_down)
   (upper_case)
   (lower_case)
   (line_transpose)
   (line_delete)
   (line_cut)
   (del_word_right)
   (del_word_left)
   (zoom_out)
   (zoom_in)
   (v_c_home_extend)
   (v_c_home)
   (form_feed)
   (new_line)
   (back_tab)
   (tab)
   (delete_back)
   (cancel)
   (edit_toggle_overtype)
   (page_down_extend)
   (page_down)
   (page_up_extend)
   (page_up)
   (document_end_extend)
   (document_end)
   (document_start_extend)
   (document_start)
   (line_end_extend)
   (line_end)
   (home_extend)
   (home)
   (word_right_extend)
   (word_right)
   (word_left_extend)
   (word_left)
   (char_right_extend)
   (char_right)
   (char_left_extend)
   (char_left)
   (line_up_extend)
   (line_up)
   (line_down_extend)
   (line_down)
   ((get_backspace_unindents :return-type int))
   (set_backspace_unindents (bs_unindents :gtk-type int))
   ((get_tab_indents :return-type int))
   (set_tab_indents (tab_indents :gtk-type int))
   (set_fold_flags (flags :gtk-type int))
   (ensure_visible (line :gtk-type int))
   (toggle_fold (line :gtk-type int))
   ((get_fold_expanded :return-type int) (line :gtk-type int))
   (set_fold_expanded (line :gtk-type int) (expanded :gtk-type int))
   ((get_line_visible :return-type int) (line :gtk-type int))
   (hide_lines (line_start :gtk-type int) (line_end :gtk-type int))
   (show_lines (line_start :gtk-type int) (line_end :gtk-type int))
   ((get_fold_parent :return-type int) (line :gtk-type int))
   ((get_last_child :return-type int) (line :gtk-type int) (level :gtk-type int))
   ((get_fold_level :return-type int) (line :gtk-type int))
   (set_fold_level (line :gtk-type int) (level :gtk-type int))
   ((doc_line_from_visible :return-type int) (line_display :gtk-type int))
   ((visible_from_doc_line :return-type int) (line :gtk-type int))
   (call_tip_set_back (back :gtk-type long))
   (call_tip_set_hlt (start :gtk-type int) (end :gtk-type int))
   ((call_tip_pos_start :return-type long))
   ((call_tip_active :return-type int))
   (call_tip_cancel)
   (call_tip_show (pos :gtk-type long) (definition :gtk-type const-char*))
   ((get_search_flags :return-type int))
   (set_search_flags (flags :gtk-type int))
;overridden   ((search_in_target :return-type int) (length :gtk-type int) (text :gtk-type const-char*))
;overridden   ((replace_target_re :return-type int) (length :gtk-type int) (text :gtk-type const-char*))
;overridden   ((replace_target :return-type int) (length :gtk-type int) (text :gtk-type const-char*))
   ((get_target_end :return-type long))
   (set_target_end (pos :gtk-type long))
   ((get_target_start :return-type long))
   (set_target_start (pos :gtk-type long))
   ((get_caret_width :return-type int))
   (set_caret_width (pixel_width :gtk-type int))
   ((get_overtype :return-type int))
   (set_overtype (overtype :gtk-type int))
   ((get_direct_pointer :return-type int))
   ((get_direct_function :return-type int))
;overridden   ((get_text_length :return-type int))
   ((get_text :return-type int) (length :gtk-type int) (text :gtk-type char*))
   (set_text (text :gtk-type const-char*))
   (clear)
   (paste)
   (copy)
   (cut)
   (undo)
   (empty_undo_buffer)
   ((can_undo :return-type int))
   ((can_paste :return-type int))
   (null)
   (set_read_only (read_only :gtk-type int))
   (replace_sel (text :gtk-type const-char*))
   (scroll_caret)
   (line_scroll (columns :gtk-type int) (lines :gtk-type int))
   ((position_from_line :return-type int) (line :gtk-type int))
   ((line_from_position :return-type int) (pos :gtk-type long))
   ((point_y_from_position :return-type int) (pos :gtk-type long))
   ((point_x_from_position :return-type int) (pos :gtk-type long))
   (hide_selection (normal :gtk-type int))
;overridden   ((get_sel_text :return-type int) (text :gtk-type char*))
   (set_sel (start :gtk-type long) (end :gtk-type long))
   ((get_modify :return-type int))
   ((get_margin_right :return-type int))
   (set_margin_right (pixel_width :gtk-type int))
   ((get_margin_left :return-type int))
   (set_margin_left (pixel_width :gtk-type int))
   ((get_line_count :return-type int))
;overridden   ((get_line :return-type int) (line :gtk-type int) (text :gtk-type char*))
   ((get_first_visible_line :return-type int))
   ((get_print_colour_mode :return-type int))
   (set_print_colour_mode (mode :gtk-type int))
   ((get_print_magnification :return-type int))
   (set_print_magnification (magnification :gtk-type int))
   ((get_selection_end :return-type long))
   (set_selection_end (pos :gtk-type long))
   ((get_selection_start :return-type long))
   (set_selection_start (pos :gtk-type long))
   (set_current_pos (pos :gtk-type long))
   ((get_read_only :return-type int))
   ((get_use_palette :return-type int))
   ((get_caret_fore :return-type long))
   ((get_code_page :return-type int))
   ((get_line_end_position :return-type int) (line :gtk-type int))
   ((get_highlight_guide :return-type int))
   (set_highlight_guide (column :gtk-type int))
   ((get_indentation_guides :return-type int))
   (set_indentation_guides (show :gtk-type int))
   ((get_h_scroll_bar :return-type int))
   (set_h_scroll_bar (show :gtk-type int))
   ((get_column :return-type int) (pos :gtk-type long))
   ((get_line_indent_position :return-type long) (line :gtk-type int))
   ((get_line_indentation :return-type int) (line :gtk-type int))
   (set_line_indentation (line :gtk-type int) (indent_size :gtk-type int))
   ((get_use_tabs :return-type int))
   (set_use_tabs (use_tabs :gtk-type int))
   ((get_indent :return-type int))
   (set_indent (indent_size :gtk-type int))
   ((autoc_get_auto_hide :return-type int))
   (autoc_set_auto_hide (auto_hide :gtk-type int))
   (user_list_show (list_type :gtk-type int) (item_list :gtk-type const-char*))
   ((autoc_get_ignore_case :return-type int))
   (autoc_set_ignore_case (ignore_case :gtk-type int))
   ((autoc_get_choose_single :return-type int))
   (autoc_set_choose_single (choose_single :gtk-type int))
   (autoc_set_fill_ups (character_set :gtk-type const-char*))
   ((autoc_get_cancel_at_start :return-type int))
   (autoc_set_cancel_at_start (cancel :gtk-type int))
   (autoc_select (text :gtk-type const-char*))
   ((autoc_get_separator :return-type int))
   (autoc_set_separator (separator_character :gtk-type int))
   (autoc_stops (character_set :gtk-type const-char*))
   (autoc_complete)
   ((autoc_pos_start :return-type long))
   ((autoc_active :return-type int))
   (autoc_cancel)
   (autoc_show (len_entered :gtk-type int) (item_list :gtk-type const-char*))
   (set_caret_line_back (back :gtk-type long))
   ((get_caret_line_back :return-type long))
   (set_caret_line_visible (show :gtk-type int))
   ((get_caret_line_visible :return-type int))
   ((get_max_line_state :return-type int))
   ((get_line_state :return-type int) (line :gtk-type int))
   (set_line_state (line :gtk-type int) (state :gtk-type int))
   ((get_style_bits :return-type int))
   (set_style_bits (bits :gtk-type int))
   ((indic_get_fore :return-type long) (indic :gtk-type int))
   (indic_set_fore (indic :gtk-type int) (fore :gtk-type long))
   ((indic_get_style :return-type int) (indic :gtk-type int))
   (indic_set_style (indic :gtk-type int) (style :gtk-type int))
   (end_undo_action)
   (begin_undo_action)
   (set_word_chars (characters :gtk-type const-char*))
   (set_caret_period (period_milliseconds :gtk-type int))
   ((get_caret_period :return-type int))
   (style_set_visible (style :gtk-type int) (visible :gtk-type int))
   (set_styling_ex (length :gtk-type int) (styles :gtk-type const-char*))
   (clear_all_cmd_keys)
   (set_caret_fore (fore :gtk-type long))
   (set_sel_back (use_setting :gtk-type int) (back :gtk-type long))
   (set_sel_fore (use_setting :gtk-type int) (fore :gtk-type long))
   (style_set_character_set (style :gtk-type int) (character_set :gtk-type int))
   (style_set_case (style :gtk-type int) (case_force :gtk-type int))
   (style_set_underline (style :gtk-type int) (underline :gtk-type int))
   (style_reset_default)
   (style_set_eol_filled (style :gtk-type int) (filled :gtk-type int))
   (style_set_font (style :gtk-type int) (font_name :gtk-type const-char*))
   (style_set_size (style :gtk-type int) (size_points :gtk-type int))
   (style_set_italic (style :gtk-type int) (italic :gtk-type int))
   (style_set_bold (style :gtk-type int) (bold :gtk-type int))
   (style_set_back (style :gtk-type int) (back :gtk-type long))
   (style_set_fore (style :gtk-type int) (fore :gtk-type long))
   (style_clear_all)
   ((get_margin_sensitive_n :return-type int) (margin :gtk-type int))
   (set_margin_sensitive_n (margin :gtk-type int) (sensitive :gtk-type int))
   ((get_margin_mask_n :return-type int) (margin :gtk-type int))
   (set_margin_mask_n (margin :gtk-type int) (mask :gtk-type int))
   ((get_margin_width_n :return-type int) (margin :gtk-type int))
   (set_margin_width_n (margin :gtk-type int) (pixel_width :gtk-type int))
   ((get_margin_type_n :return-type int) (margin :gtk-type int))
   (set_margin_type_n (margin :gtk-type int) (margin_type :gtk-type int))
   ((marker_previous :return-type int) (line_start :gtk-type int) (marker_mask :gtk-type int))
   ((marker_next :return-type int) (line_start :gtk-type int) (marker_mask :gtk-type int))
   ((marker_get :return-type int) (line :gtk-type int))
   (marker_delete_all (marker_number :gtk-type int))
   (marker_delete (line :gtk-type int) (marker_number :gtk-type int))
   ((marker_add :return-type int) (line :gtk-type int) (marker_number :gtk-type int))
   (marker_set_back (marker_number :gtk-type int) (back :gtk-type long))
   (marker_set_fore (marker_number :gtk-type int) (fore :gtk-type long))
   (marker_define (marker_number :gtk-type int) (marker_symbol :gtk-type int))
   (set_use_palette (use_palette :gtk-type int))
   (set_code_page (code_page :gtk-type int))
   ((get_tab_width :return-type int))
   (set_tab_width (tab_width :gtk-type int))
   (set_buffered_draw (buffered :gtk-type int))
   ((get_buffered_draw :return-type int))
   (set_styling (length :gtk-type int) (style :gtk-type int))
   (start_styling (pos :gtk-type long) (mask :gtk-type int))
   (set_eol_mode (eol_mode :gtk-type int))
   ((get_eol_mode :return-type int))
   (convert_eols (eol_mode :gtk-type int))
   ((get_end_styled :return-type long))
;overridden   ((get_cur_line :return-type int) (length :gtk-type int) (text :gtk-type char*))
   (set_anchor (pos_anchor :gtk-type long))
   (goto_pos (pos :gtk-type long))
   (goto_line (line :gtk-type int))
   ((position_from_point :return-type int) (x :gtk-type int) (y :gtk-type int))
   (set_view_ws (view_ws :gtk-type int))
   ((get_view_ws :return-type int))
   ((get_undo_collection :return-type int))
   (marker_delete_handle (handle :gtk-type int))
   ((marker_line_from_handle :return-type int) (handle :gtk-type int))
   ((can_redo :return-type int))
   (set_save_point)
   (select_all)
   (set_undo_collection (collect_undo :gtk-type int))
   (redo)
   ((get_style_at :return-type int) (pos :gtk-type long))
   ((get_anchor :return-type long))
   ((get_current_pos :return-type long))
   ((get_char_at :return-type int) (pos :gtk-type long))
   ((get_length :return-type int))
   (clear_document_style)
   (clear_all)
   (insert_text (pos :gtk-type long) (text :gtk-type const-char*))
;overridden   (add_text (length :gtk-type int) (text :gtk-type const-char*))
;overridden   ((find_text :return-type long) (flags :gtk-type int) (text :gtk-type char*) (chrg_min :gtk-type long) (chrg_max :gtk-type long) (text_min :gtk-type long*) (text_max :gtk-type long*))
   )


;;; these are the overridden functions
(defmethod GtkScintilla (add_text text)
   (let* ((this::GtkScintilla* (GTK_SCINTILLA (gtk-object $this)))
	  (text (mkstr text))
	  (length (string-length text)))
      (gtk_scintilla_add_text this length text)
      NULL))

(defmethod GtkScintilla (get_cur_line)
   (let* ((this::GtkScintilla* (GTK_SCINTILLA (gtk-object $this)))
	  (len::int (gtk_scintilla_line_length
		     this
		     (gtk_scintilla_line_from_position
		      this
		      (gtk_scintilla_get_current_pos this))))
	  (text (make-string len))
	  (line-pos (gtk_scintilla_get_cur_line this len text)))
      (debug-trace 3 "get_cur_line(): text is :" text ": ... is that what we want?")
      (list->php-hash (list text (int->onum line-pos)))))

   
(defmethod GtkScintilla (get_text)
   (let* ((this::GtkScintilla* (GTK_SCINTILLA (gtk-object $this)))
	  (len::int (gtk_scintilla_get_text_length this))
	  (text (make-string len)))
      (gtk_scintilla_get_text this len text)
      (debug-trace 3 "get_text(): text is :" text ": ... is that what we want?")
      text))

(defmethod GtkScintilla (get_line lineno)
   (let* ((this::GtkScintilla* (GTK_SCINTILLA (gtk-object $this)))
	  (lineno::int (mkfixnum lineno))
	  (len::int (gtk_scintilla_line_length this lineno))
	  (text (make-string len)))
      ;; we have to check the length to work around a gtkscintilla
      ;; bug, according to the php-gtk sources...
      (when (> len 1)
	 (gtk_scintilla_get_line this lineno text))
      text))

(defmethod GtkScintilla (get_sel_text)
   (let* ((this::GtkScintilla* (GTK_SCINTILLA (gtk-object $this)))
	  (len::int (- (gtk_scintilla_get_selection_end this)
		       (gtk_scintilla_get_selection_start this)))
	  (text (make-string len)))
      (gtk_scintilla_get_sel_text this text)
      text))

; override gtk_scintilla_get_sel_text
; /* TODO: fix to properly handle rectangular selections */
; PHP_FUNCTION(gtk_scintilla_get_sel_text)
; {
; 	long length;
; 	char *text;
; 	GtkScintilla *scintilla = GTK_SCINTILLA(PHP_GTK_GET(this_ptr));

; 	NOT_STATIC_METHOD();

; 	if (!php_gtk_parse_args(ZEND_NUM_ARGS(), ""))
; 		return;
	
; 	length = gtk_scintilla_get_selection_end(scintilla) - gtk_scintilla_get_selection_start(scintilla) + 1;
; 	text = emalloc(length);
; 	text[length-1] = 0;

; 	gtk_scintilla_get_sel_text(scintilla, text);

; 	RETURN_STRINGL(text, length-1, 0);
; }
; (defmethod GtkScintilla
; override gtk_scintilla_replace_target
; PHP_FUNCTION(gtk_scintilla_replace_target)
; {
; 	int length;
; 	char *text;

; 	NOT_STATIC_METHOD();

; 	if (!php_gtk_parse_args(ZEND_NUM_ARGS(), "s#", &text, &length))
; 		return;

; 	length = gtk_scintilla_replace_target(GTK_SCINTILLA(PHP_GTK_GET(this_ptr)), length, text);

; 	RETURN_LONG(length);
; }
; (defmethod GtkScintilla
; override gtk_scintilla_replace_target_re
; PHP_FUNCTION(gtk_scintilla_replace_target_re)
; {
; 	int length;
; 	char *text;

; 	NOT_STATIC_METHOD();

; 	if (!php_gtk_parse_args(ZEND_NUM_ARGS(), "s#", &text, &length))
; 		return;

; 	length = gtk_scintilla_replace_target_re(GTK_SCINTILLA(PHP_GTK_GET(this_ptr)), length, text);

; 	RETURN_LONG(length);
; }
; (defmethod GtkScintilla
; override gtk_scintilla_search_in_target
; PHP_FUNCTION(gtk_scintilla_search_in_target)
; {
; #ifdef PHP_WIN32
; 	RETURN_LONG(0);
; #else
; 	int length, pos;
; 	char *text;

; 	NOT_STATIC_METHOD();

; 	if (!php_gtk_parse_args(ZEND_NUM_ARGS(), "s#", &text, &length))
; 		return;

; 	RETURN_LONG(gtk_search_in_target(GTK_SCINTILLA(PHP_GTK_GET(this_ptr)), length, text));
; #endif
; }
; (defmethod GtkScintilla
; override gtk_scintilla_find_text
; PHP_FUNCTION(gtk_scintilla_find_text)
; {
; 	int flags;
; 	char *text;
; 	long chrg_min = 0, chrg_max,
; 		 text_min, text_max;
; 	GtkScintilla *scintilla = GTK_SCINTILLA(PHP_GTK_GET(this_ptr));

; 	NOT_STATIC_METHOD();

; 	if (!php_gtk_parse_args(ZEND_NUM_ARGS(), "is|ll", &flags, &text, &chrg_min,
; 							&chrg_max))
; 		return;

; 	if (ZEND_NUM_ARGS() < 4) {
; 		chrg_max = gtk_scintilla_get_line_end_position(scintilla, gtk_scintilla_get_line_count(scintilla));
; 	}

; 	RETURN_LONG(gtk_scintilla_find_text(scintilla, flags, text, chrg_min,
; 										chrg_max, &text_min, &text_max));
; }

;;; just constants from here on in

(defconstant SCINTILLA_INVALID_POSITION (int->onum INVALID_POSITION))
(defconstant SCINTILLA_WS_INVISIBLE (int->onum SCWS_INVISIBLE))
(defconstant SCINTILLA_WS_VISIBLEALWAYS (int->onum SCWS_VISIBLEALWAYS))
(defconstant SCINTILLA_WS_VISIBLEAFTERINDENT (int->onum SCWS_VISIBLEAFTERINDENT))
(defconstant SCINTILLA_EOL_CRLF (int->onum SC_EOL_CRLF))
(defconstant SCINTILLA_EOL_CR (int->onum SC_EOL_CR))
(defconstant SCINTILLA_EOL_LF (int->onum SC_EOL_LF))
(defconstant SCINTILLA_CP_UTF8 (int->onum SC_CP_UTF8))
(defconstant SCINTILLA_MARKER_MAX (int->onum MARKER_MAX))
(defconstant SCINTILLA_MARK_CIRCLE (int->onum SC_MARK_CIRCLE))
(defconstant SCINTILLA_MARK_ROUNDRECT (int->onum SC_MARK_ROUNDRECT))
(defconstant SCINTILLA_MARK_ARROW (int->onum SC_MARK_ARROW))
(defconstant SCINTILLA_MARK_SMALLRECT (int->onum SC_MARK_SMALLRECT))
(defconstant SCINTILLA_MARK_SHORTARROW (int->onum SC_MARK_SHORTARROW))
(defconstant SCINTILLA_MARK_EMPTY (int->onum SC_MARK_EMPTY))
(defconstant SCINTILLA_MARK_ARROWDOWN (int->onum SC_MARK_ARROWDOWN))
(defconstant SCINTILLA_MARK_MINUS (int->onum SC_MARK_MINUS))
(defconstant SCINTILLA_MARK_PLUS (int->onum SC_MARK_PLUS))
(defconstant SCINTILLA_MARKNUM_FOLDER (int->onum SC_MARKNUM_FOLDER))
(defconstant SCINTILLA_MARKNUM_FOLDEROPEN (int->onum SC_MARKNUM_FOLDEROPEN))
(defconstant SCINTILLA_MARGIN_SYMBOL (int->onum SC_MARGIN_SYMBOL))
(defconstant SCINTILLA_MARGIN_NUMBER (int->onum SC_MARGIN_NUMBER))
(defconstant SCINTILLA_STYLE_DEFAULT (int->onum STYLE_DEFAULT))
(defconstant SCINTILLA_STYLE_LINENUMBER (int->onum STYLE_LINENUMBER))
(defconstant SCINTILLA_STYLE_BRACELIGHT (int->onum STYLE_BRACELIGHT))
(defconstant SCINTILLA_STYLE_BRACEBAD (int->onum STYLE_BRACEBAD))
(defconstant SCINTILLA_STYLE_CONTROLCHAR (int->onum STYLE_CONTROLCHAR))
(defconstant SCINTILLA_STYLE_INDENTGUIDE (int->onum STYLE_INDENTGUIDE))
(defconstant SCINTILLA_STYLE_MAX (int->onum STYLE_MAX))
(defconstant SCINTILLA_CHARSET_ANSI (int->onum SC_CHARSET_ANSI))
(defconstant SCINTILLA_CHARSET_DEFAULT (int->onum SC_CHARSET_DEFAULT))
(defconstant SCINTILLA_CHARSET_BALTIC (int->onum SC_CHARSET_BALTIC))
(defconstant SCINTILLA_CHARSET_CHINESEBIG5 (int->onum SC_CHARSET_CHINESEBIG5))
(defconstant SCINTILLA_CHARSET_EASTEUROPE (int->onum SC_CHARSET_EASTEUROPE))
(defconstant SCINTILLA_CHARSET_GB2312 (int->onum SC_CHARSET_GB2312))
(defconstant SCINTILLA_CHARSET_GREEK (int->onum SC_CHARSET_GREEK))
(defconstant SCINTILLA_CHARSET_HANGUL (int->onum SC_CHARSET_HANGUL))
(defconstant SCINTILLA_CHARSET_MAC (int->onum SC_CHARSET_MAC))
(defconstant SCINTILLA_CHARSET_OEM (int->onum SC_CHARSET_OEM))
(defconstant SCINTILLA_CHARSET_RUSSIAN (int->onum SC_CHARSET_RUSSIAN))
(defconstant SCINTILLA_CHARSET_SHIFTJIS (int->onum SC_CHARSET_SHIFTJIS))
(defconstant SCINTILLA_CHARSET_SYMBOL (int->onum SC_CHARSET_SYMBOL))
(defconstant SCINTILLA_CHARSET_TURKISH (int->onum SC_CHARSET_TURKISH))
(defconstant SCINTILLA_CHARSET_JOHAB (int->onum SC_CHARSET_JOHAB))
(defconstant SCINTILLA_CHARSET_HEBREW (int->onum SC_CHARSET_HEBREW))
(defconstant SCINTILLA_CHARSET_ARABIC (int->onum SC_CHARSET_ARABIC))
(defconstant SCINTILLA_CHARSET_VIETNAMESE (int->onum SC_CHARSET_VIETNAMESE))
(defconstant SCINTILLA_CHARSET_THAI (int->onum SC_CHARSET_THAI))
(defconstant SCINTILLA_CASE_MIXED (int->onum SC_CASE_MIXED))
(defconstant SCINTILLA_CASE_UPPER (int->onum SC_CASE_UPPER))
(defconstant SCINTILLA_CASE_LOWER (int->onum SC_CASE_LOWER))
(defconstant SCINTILLA_INDIC_MAX (int->onum INDIC_MAX))
(defconstant SCINTILLA_INDIC_PLAIN (int->onum INDIC_PLAIN))
(defconstant SCINTILLA_INDIC_SQUIGGLE (int->onum INDIC_SQUIGGLE))
(defconstant SCINTILLA_INDIC_TT (int->onum INDIC_TT))
(defconstant SCINTILLA_INDIC_DIAGONAL (int->onum INDIC_DIAGONAL))
(defconstant SCINTILLA_INDIC_STRIKE (int->onum INDIC_STRIKE))
(defconstant SCINTILLA_INDIC0_MASK (int->onum INDIC0_MASK))
(defconstant SCINTILLA_INDIC1_MASK (int->onum INDIC1_MASK))
(defconstant SCINTILLA_INDIC2_MASK (int->onum INDIC2_MASK))
(defconstant SCINTILLA_INDICS_MASK (int->onum INDICS_MASK))
(defconstant SCINTILLA_FIND_WHOLEWORD (int->onum SCFIND_WHOLEWORD))
(defconstant SCINTILLA_FIND_MATCHCASE (int->onum SCFIND_MATCHCASE))
(defconstant SCINTILLA_FIND_WORDSTART (int->onum SCFIND_WORDSTART))
(defconstant SCINTILLA_FIND_REGEXP (int->onum SCFIND_REGEXP))
(defconstant SCINTILLA_FOLDLEVELBASE (int->onum SC_FOLDLEVELBASE))
(defconstant SCINTILLA_FOLDLEVELWHITEFLAG (int->onum SC_FOLDLEVELWHITEFLAG))
(defconstant SCINTILLA_FOLDLEVELHEADERFLAG (int->onum SC_FOLDLEVELHEADERFLAG))
(defconstant SCINTILLA_FOLDLEVELNUMBERMASK (int->onum SC_FOLDLEVELNUMBERMASK))
(defconstant SCINTILLA_EDGE_NONE (int->onum EDGE_NONE))
(defconstant SCINTILLA_EDGE_LINE (int->onum EDGE_LINE))
(defconstant SCINTILLA_EDGE_BACKGROUND (int->onum EDGE_BACKGROUND))
(defconstant SCINTILLA_CARET_SLOP (int->onum CARET_SLOP))
(defconstant SCINTILLA_CARET_CENTER (int->onum CARET_CENTER))
(defconstant SCINTILLA_CARET_STRICT (int->onum CARET_STRICT))
(defconstant SCINTILLA_CARET_XEVEN (int->onum CARET_XEVEN))
(defconstant SCINTILLA_CURSORNORMAL (int->onum SC_CURSORNORMAL))
(defconstant SCINTILLA_CURSORWAIT (int->onum SC_CURSORWAIT))
(defconstant SCINTILLA_VISIBLE_SLOP (int->onum VISIBLE_SLOP))
(defconstant SCINTILLA_VISIBLE_STRICT (int->onum VISIBLE_STRICT))
(defconstant SCINTILLA_MOD_INSERTTEXT (int->onum SC_MOD_INSERTTEXT))
(defconstant SCINTILLA_MOD_DELETETEXT (int->onum SC_MOD_DELETETEXT))
(defconstant SCINTILLA_MOD_CHANGESTYLE (int->onum SC_MOD_CHANGESTYLE))
(defconstant SCINTILLA_MOD_CHANGEFOLD (int->onum SC_MOD_CHANGEFOLD))
(defconstant SCINTILLA_PERFORMED_USER (int->onum SC_PERFORMED_USER))
(defconstant SCINTILLA_PERFORMED_UNDO (int->onum SC_PERFORMED_UNDO))
(defconstant SCINTILLA_PERFORMED_REDO (int->onum SC_PERFORMED_REDO))
(defconstant SCINTILLA_LASTSTEPINUNDOREDO (int->onum SC_LASTSTEPINUNDOREDO))
(defconstant SCINTILLA_MOD_CHANGEMARKER (int->onum SC_MOD_CHANGEMARKER))
(defconstant SCINTILLA_MOD_BEFOREINSERT (int->onum SC_MOD_BEFOREINSERT))
(defconstant SCINTILLA_MOD_BEFOREDELETE (int->onum SC_MOD_BEFOREDELETE))
(defconstant SCINTILLA_MODEVENTMASKALL (int->onum SC_MODEVENTMASKALL))
(defconstant SCINTILLA_EN_CHANGE (int->onum SCEN_CHANGE))
(defconstant SCINTILLA_EN_SETFOCUS (int->onum SCEN_SETFOCUS))
(defconstant SCINTILLA_EN_KILLFOCUS (int->onum SCEN_KILLFOCUS))
(defconstant SCINTILLA_KEY_DOWN (int->onum SCK_DOWN))
(defconstant SCINTILLA_KEY_UP (int->onum SCK_UP))
(defconstant SCINTILLA_KEY_LEFT (int->onum SCK_LEFT))
(defconstant SCINTILLA_KEY_RIGHT (int->onum SCK_RIGHT))
(defconstant SCINTILLA_KEY_HOME (int->onum SCK_HOME))
(defconstant SCINTILLA_KEY_END (int->onum SCK_END))
(defconstant SCINTILLA_KEY_PRIOR (int->onum SCK_PRIOR))
(defconstant SCINTILLA_KEY_NEXT (int->onum SCK_NEXT))
(defconstant SCINTILLA_KEY_DELETE (int->onum SCK_DELETE))
(defconstant SCINTILLA_KEY_INSERT (int->onum SCK_INSERT))
(defconstant SCINTILLA_KEY_ESCAPE (int->onum SCK_ESCAPE))
(defconstant SCINTILLA_KEY_BACK (int->onum SCK_BACK))
(defconstant SCINTILLA_KEY_TAB (int->onum SCK_TAB))
(defconstant SCINTILLA_KEY_RETURN (int->onum SCK_RETURN))
(defconstant SCINTILLA_KEY_ADD (int->onum SCK_ADD))
(defconstant SCINTILLA_KEY_SUBTRACT (int->onum SCK_SUBTRACT))
(defconstant SCINTILLA_KEY_DIVIDE (int->onum SCK_DIVIDE))
(defconstant SCINTILLA_MOD_SHIFT (int->onum SCMOD_SHIFT))
(defconstant SCINTILLA_MOD_CTRL (int->onum SCMOD_CTRL))
(defconstant SCINTILLA_MOD_ALT (int->onum SCMOD_ALT))
(defconstant SCINTILLA_LEX_CONTAINER (int->onum SCLEX_CONTAINER))
(defconstant SCINTILLA_LEX_NULL (int->onum SCLEX_NULL))
(defconstant SCINTILLA_LEX_PYTHON (int->onum SCLEX_PYTHON))
(defconstant SCINTILLA_LEX_CPP (int->onum SCLEX_CPP))
(defconstant SCINTILLA_LEX_HTML (int->onum SCLEX_HTML))
(defconstant SCINTILLA_LEX_XML (int->onum SCLEX_XML))
(defconstant SCINTILLA_LEX_PERL (int->onum SCLEX_PERL))
(defconstant SCINTILLA_LEX_SQL (int->onum SCLEX_SQL))
(defconstant SCINTILLA_LEX_VB (int->onum SCLEX_VB))
(defconstant SCINTILLA_LEX_PROPERTIES (int->onum SCLEX_PROPERTIES))
(defconstant SCINTILLA_LEX_ERRORLIST (int->onum SCLEX_ERRORLIST))
(defconstant SCINTILLA_LEX_MAKEFILE (int->onum SCLEX_MAKEFILE))
(defconstant SCINTILLA_LEX_BATCH (int->onum SCLEX_BATCH))
(defconstant SCINTILLA_LEX_XCODE (int->onum SCLEX_XCODE))
(defconstant SCINTILLA_LEX_LATEX (int->onum SCLEX_LATEX))
(defconstant SCINTILLA_LEX_LUA (int->onum SCLEX_LUA))
(defconstant SCINTILLA_LEX_DIFF (int->onum SCLEX_DIFF))
(defconstant SCINTILLA_LEX_CONF (int->onum SCLEX_CONF))
(defconstant SCINTILLA_LEX_PASCAL (int->onum SCLEX_PASCAL))
(defconstant SCINTILLA_LEX_AVE (int->onum SCLEX_AVE))
(defconstant SCINTILLA_LEX_ADA (int->onum SCLEX_ADA))
(defconstant SCINTILLA_LEX_LISP (int->onum SCLEX_LISP))
(defconstant SCINTILLA_LEX_RUBY (int->onum SCLEX_RUBY))
(defconstant SCINTILLA_LEX_EIFFEL (int->onum SCLEX_EIFFEL))
(defconstant SCINTILLA_LEX_EIFFELKW (int->onum SCLEX_EIFFELKW))
(defconstant SCINTILLA_LEX_AUTOMATIC (int->onum SCLEX_AUTOMATIC))
(defconstant SCINTILLA_PY_DEFAULT (int->onum SCE_P_DEFAULT))
(defconstant SCINTILLA_PY_COMMENTLINE (int->onum SCE_P_COMMENTLINE))
(defconstant SCINTILLA_PY_NUMBER (int->onum SCE_P_NUMBER))
(defconstant SCINTILLA_PY_STRING (int->onum SCE_P_STRING))
(defconstant SCINTILLA_PY_CHARACTER (int->onum SCE_P_CHARACTER))
(defconstant SCINTILLA_PY_WORD (int->onum SCE_P_WORD))
(defconstant SCINTILLA_PY_TRIPLE (int->onum SCE_P_TRIPLE))
(defconstant SCINTILLA_PY_TRIPLEDOUBLE (int->onum SCE_P_TRIPLEDOUBLE))
(defconstant SCINTILLA_PY_CLASSNAME (int->onum SCE_P_CLASSNAME))
(defconstant SCINTILLA_PY_DEFNAME (int->onum SCE_P_DEFNAME))
(defconstant SCINTILLA_PY_OPERATOR (int->onum SCE_P_OPERATOR))
(defconstant SCINTILLA_PY_IDENTIFIER (int->onum SCE_P_IDENTIFIER))
(defconstant SCINTILLA_PY_COMMENTBLOCK (int->onum SCE_P_COMMENTBLOCK))
(defconstant SCINTILLA_PY_STRINGEOL (int->onum SCE_P_STRINGEOL))
(defconstant SCINTILLA_C_DEFAULT (int->onum SCE_C_DEFAULT))
(defconstant SCINTILLA_C_COMMENT (int->onum SCE_C_COMMENT))
(defconstant SCINTILLA_C_COMMENTLINE (int->onum SCE_C_COMMENTLINE))
(defconstant SCINTILLA_C_COMMENTDOC (int->onum SCE_C_COMMENTDOC))
(defconstant SCINTILLA_C_NUMBER (int->onum SCE_C_NUMBER))
(defconstant SCINTILLA_C_WORD (int->onum SCE_C_WORD))
(defconstant SCINTILLA_C_STRING (int->onum SCE_C_STRING))
(defconstant SCINTILLA_C_CHARACTER (int->onum SCE_C_CHARACTER))
(defconstant SCINTILLA_C_UUID (int->onum SCE_C_UUID))
(defconstant SCINTILLA_C_PREPROCESSOR (int->onum SCE_C_PREPROCESSOR))
(defconstant SCINTILLA_C_OPERATOR (int->onum SCE_C_OPERATOR))
(defconstant SCINTILLA_C_IDENTIFIER (int->onum SCE_C_IDENTIFIER))
(defconstant SCINTILLA_C_STRINGEOL (int->onum SCE_C_STRINGEOL))
(defconstant SCINTILLA_C_VERBATIM (int->onum SCE_C_VERBATIM))
(defconstant SCINTILLA_C_REGEX (int->onum SCE_C_REGEX))
(defconstant SCINTILLA_C_COMMENTLINEDOC (int->onum SCE_C_COMMENTLINEDOC))
(defconstant SCINTILLA_HTML_DEFAULT (int->onum SCE_H_DEFAULT))
(defconstant SCINTILLA_HTML_TAG (int->onum SCE_H_TAG))
(defconstant SCINTILLA_HTML_TAGUNKNOWN (int->onum SCE_H_TAGUNKNOWN))
(defconstant SCINTILLA_HTML_ATTRIBUTE (int->onum SCE_H_ATTRIBUTE))
(defconstant SCINTILLA_HTML_ATTRIBUTEUNKNOWN (int->onum SCE_H_ATTRIBUTEUNKNOWN))
(defconstant SCINTILLA_HTML_NUMBER (int->onum SCE_H_NUMBER))
(defconstant SCINTILLA_HTML_DOUBLESTRING (int->onum SCE_H_DOUBLESTRING))
(defconstant SCINTILLA_HTML_SINGLESTRING (int->onum SCE_H_SINGLESTRING))
(defconstant SCINTILLA_HTML_OTHER (int->onum SCE_H_OTHER))
(defconstant SCINTILLA_HTML_COMMENT (int->onum SCE_H_COMMENT))
(defconstant SCINTILLA_HTML_ENTITY (int->onum SCE_H_ENTITY))
(defconstant SCINTILLA_HTML_TAGEND (int->onum SCE_H_TAGEND))
(defconstant SCINTILLA_HTML_XMLSTART (int->onum SCE_H_XMLSTART))
(defconstant SCINTILLA_HTML_XMLEND (int->onum SCE_H_XMLEND))
(defconstant SCINTILLA_HTML_SCRIPT (int->onum SCE_H_SCRIPT))
(defconstant SCINTILLA_HTML_ASP (int->onum SCE_H_ASP))
(defconstant SCINTILLA_HTML_ASPAT (int->onum SCE_H_ASPAT))
(defconstant SCINTILLA_HTML_CDATA (int->onum SCE_H_CDATA))
(defconstant SCINTILLA_HTML_QUESTION (int->onum SCE_H_QUESTION))
(defconstant SCINTILLA_HTML_VALUE (int->onum SCE_H_VALUE))
(defconstant SCINTILLA_HTML_JS_START (int->onum SCE_HJ_START))
(defconstant SCINTILLA_HTML_JS_DEFAULT (int->onum SCE_HJ_DEFAULT))
(defconstant SCINTILLA_HTML_JS_COMMENT (int->onum SCE_HJ_COMMENT))
(defconstant SCINTILLA_HTML_JS_COMMENTLINE (int->onum SCE_HJ_COMMENTLINE))
(defconstant SCINTILLA_HTML_JS_COMMENTDOC (int->onum SCE_HJ_COMMENTDOC))
(defconstant SCINTILLA_HTML_JS_NUMBER (int->onum SCE_HJ_NUMBER))
(defconstant SCINTILLA_HTML_JS_WORD (int->onum SCE_HJ_WORD))
(defconstant SCINTILLA_HTML_JS_KEYWORD (int->onum SCE_HJ_KEYWORD))
(defconstant SCINTILLA_HTML_JS_DOUBLESTRING (int->onum SCE_HJ_DOUBLESTRING))
(defconstant SCINTILLA_HTML_JS_SINGLESTRING (int->onum SCE_HJ_SINGLESTRING))
(defconstant SCINTILLA_HTML_JS_SYMBOLS (int->onum SCE_HJ_SYMBOLS))
(defconstant SCINTILLA_HTML_JS_STRINGEOL (int->onum SCE_HJ_STRINGEOL))
(defconstant SCINTILLA_HTML_JS_REGEX (int->onum SCE_HJ_REGEX))
(defconstant SCINTILLA_HTML_VB_START (int->onum SCE_HB_START))
(defconstant SCINTILLA_HTML_VB_DEFAULT (int->onum SCE_HB_DEFAULT))
(defconstant SCINTILLA_HTML_VB_COMMENTLINE (int->onum SCE_HB_COMMENTLINE))
(defconstant SCINTILLA_HTML_VB_NUMBER (int->onum SCE_HB_NUMBER))
(defconstant SCINTILLA_HTML_VB_WORD (int->onum SCE_HB_WORD))
(defconstant SCINTILLA_HTML_VB_STRING (int->onum SCE_HB_STRING))
(defconstant SCINTILLA_HTML_VB_IDENTIFIER (int->onum SCE_HB_IDENTIFIER))
(defconstant SCINTILLA_HTML_VB_STRINGEOL (int->onum SCE_HB_STRINGEOL))
(defconstant SCINTILLA_HTML_PY_START (int->onum SCE_HP_START))
(defconstant SCINTILLA_HTML_PY_DEFAULT (int->onum SCE_HP_DEFAULT))
(defconstant SCINTILLA_HTML_PY_COMMENTLINE (int->onum SCE_HP_COMMENTLINE))
(defconstant SCINTILLA_HTML_PY_NUMBER (int->onum SCE_HP_NUMBER))
(defconstant SCINTILLA_HTML_PY_STRING (int->onum SCE_HP_STRING))
(defconstant SCINTILLA_HTML_PY_CHARACTER (int->onum SCE_HP_CHARACTER))
(defconstant SCINTILLA_HTML_PY_WORD (int->onum SCE_HP_WORD))
(defconstant SCINTILLA_HTML_PY_TRIPLE (int->onum SCE_HP_TRIPLE))
(defconstant SCINTILLA_HTML_PY_TRIPLEDOUBLE (int->onum SCE_HP_TRIPLEDOUBLE))
(defconstant SCINTILLA_HTML_PY_CLASSNAME (int->onum SCE_HP_CLASSNAME))
(defconstant SCINTILLA_HTML_PY_DEFNAME (int->onum SCE_HP_DEFNAME))
(defconstant SCINTILLA_HTML_PY_OPERATOR (int->onum SCE_HP_OPERATOR))
(defconstant SCINTILLA_HTML_PY_IDENTIFIER (int->onum SCE_HP_IDENTIFIER))
(defconstant SCINTILLA_HTML_PHP_DEFAULT (int->onum SCE_HPHP_DEFAULT))
(defconstant SCINTILLA_HTML_PHP_HSTRING (int->onum SCE_HPHP_HSTRING))
(defconstant SCINTILLA_HTML_PHP_SIMPLESTRING (int->onum SCE_HPHP_SIMPLESTRING))
(defconstant SCINTILLA_HTML_PHP_WORD (int->onum SCE_HPHP_WORD))
(defconstant SCINTILLA_HTML_PHP_NUMBER (int->onum SCE_HPHP_NUMBER))
(defconstant SCINTILLA_HTML_PHP_VARIABLE (int->onum SCE_HPHP_VARIABLE))
(defconstant SCINTILLA_HTML_PHP_COMMENT (int->onum SCE_HPHP_COMMENT))
(defconstant SCINTILLA_HTML_PHP_COMMENTLINE (int->onum SCE_HPHP_COMMENTLINE))
(defconstant SCINTILLA_HTML_PHP_HSTRING_VARIABLE (int->onum SCE_HPHP_HSTRING_VARIABLE))
(defconstant SCINTILLA_PERL_DEFAULT (int->onum SCE_PL_DEFAULT))
(defconstant SCINTILLA_PERL_ERROR (int->onum SCE_PL_ERROR))
(defconstant SCINTILLA_PERL_COMMENTLINE (int->onum SCE_PL_COMMENTLINE))
(defconstant SCINTILLA_PERL_POD (int->onum SCE_PL_POD))
(defconstant SCINTILLA_PERL_NUMBER (int->onum SCE_PL_NUMBER))
(defconstant SCINTILLA_PERL_WORD (int->onum SCE_PL_WORD))
(defconstant SCINTILLA_PERL_STRING (int->onum SCE_PL_STRING))
(defconstant SCINTILLA_PERL_CHARACTER (int->onum SCE_PL_CHARACTER))
(defconstant SCINTILLA_PERL_PUNCTUATION (int->onum SCE_PL_PUNCTUATION))
(defconstant SCINTILLA_PERL_PREPROCESSOR (int->onum SCE_PL_PREPROCESSOR))
(defconstant SCINTILLA_PERL_OPERATOR (int->onum SCE_PL_OPERATOR))
(defconstant SCINTILLA_PERL_IDENTIFIER (int->onum SCE_PL_IDENTIFIER))
(defconstant SCINTILLA_PERL_SCALAR (int->onum SCE_PL_SCALAR))
(defconstant SCINTILLA_PERL_ARRAY (int->onum SCE_PL_ARRAY))
(defconstant SCINTILLA_PERL_HASH (int->onum SCE_PL_HASH))
(defconstant SCINTILLA_PERL_SYMBOLTABLE (int->onum SCE_PL_SYMBOLTABLE))
(defconstant SCINTILLA_PERL_REGEX (int->onum SCE_PL_REGEX))
(defconstant SCINTILLA_PERL_REGSUBST (int->onum SCE_PL_REGSUBST))
(defconstant SCINTILLA_PERL_LONGQUOTE (int->onum SCE_PL_LONGQUOTE))
(defconstant SCINTILLA_PERL_BACKTICKS (int->onum SCE_PL_BACKTICKS))
(defconstant SCINTILLA_PERL_DATASECTION (int->onum SCE_PL_DATASECTION))
(defconstant SCINTILLA_PERL_HERE_DELIM (int->onum SCE_PL_HERE_DELIM))
(defconstant SCINTILLA_PERL_HERE_Q (int->onum SCE_PL_HERE_Q))
(defconstant SCINTILLA_PERL_HERE_QQ (int->onum SCE_PL_HERE_QQ))
(defconstant SCINTILLA_PERL_HERE_QX (int->onum SCE_PL_HERE_QX))
(defconstant SCINTILLA_PERL_STRING_Q (int->onum SCE_PL_STRING_Q))
(defconstant SCINTILLA_PERL_STRING_QQ (int->onum SCE_PL_STRING_QQ))
(defconstant SCINTILLA_PERL_STRING_QX (int->onum SCE_PL_STRING_QX))
(defconstant SCINTILLA_PERL_STRING_QR (int->onum SCE_PL_STRING_QR))
(defconstant SCINTILLA_PERL_STRING_QW (int->onum SCE_PL_STRING_QW))
(defconstant SCINTILLA_LATEX_DEFAULT (int->onum SCE_L_DEFAULT))
(defconstant SCINTILLA_LATEX_COMMAND (int->onum SCE_L_COMMAND))
(defconstant SCINTILLA_LATEX_TAG (int->onum SCE_L_TAG))
(defconstant SCINTILLA_LATEX_MATH (int->onum SCE_L_MATH))
(defconstant SCINTILLA_LATEX_COMMENT (int->onum SCE_L_COMMENT))
(defconstant SCINTILLA_LUA_DEFAULT (int->onum SCE_LUA_DEFAULT))
(defconstant SCINTILLA_LUA_COMMENT (int->onum SCE_LUA_COMMENT))
(defconstant SCINTILLA_LUA_COMMENTLINE (int->onum SCE_LUA_COMMENTLINE))
(defconstant SCINTILLA_LUA_COMMENTDOC (int->onum SCE_LUA_COMMENTDOC))
(defconstant SCINTILLA_LUA_NUMBER (int->onum SCE_LUA_NUMBER))
(defconstant SCINTILLA_LUA_WORD (int->onum SCE_LUA_WORD))
(defconstant SCINTILLA_LUA_STRING (int->onum SCE_LUA_STRING))
(defconstant SCINTILLA_LUA_CHARACTER (int->onum SCE_LUA_CHARACTER))
(defconstant SCINTILLA_LUA_LITERALSTRING (int->onum SCE_LUA_LITERALSTRING))
(defconstant SCINTILLA_LUA_PREPROCESSOR (int->onum SCE_LUA_PREPROCESSOR))
(defconstant SCINTILLA_LUA_OPERATOR (int->onum SCE_LUA_OPERATOR))
(defconstant SCINTILLA_LUA_IDENTIFIER (int->onum SCE_LUA_IDENTIFIER))
(defconstant SCINTILLA_LUA_STRINGEOL (int->onum SCE_LUA_STRINGEOL))
(defconstant SCINTILLA_ERR_DEFAULT (int->onum SCE_ERR_DEFAULT))
(defconstant SCINTILLA_ERR_PYTHON (int->onum SCE_ERR_PYTHON))
(defconstant SCINTILLA_ERR_GCC (int->onum SCE_ERR_GCC))
(defconstant SCINTILLA_ERR_MS (int->onum SCE_ERR_MS))
(defconstant SCINTILLA_ERR_CMD (int->onum SCE_ERR_CMD))
(defconstant SCINTILLA_ERR_BORLAND (int->onum SCE_ERR_BORLAND))
(defconstant SCINTILLA_ERR_PERL (int->onum SCE_ERR_PERL))
(defconstant SCINTILLA_ERR_DIFF_CHANGED (int->onum SCE_ERR_DIFF_CHANGED))
(defconstant SCINTILLA_ERR_DIFF_ADDITION (int->onum SCE_ERR_DIFF_ADDITION))
(defconstant SCINTILLA_ERR_DIFF_DELETION (int->onum SCE_ERR_DIFF_DELETION))
(defconstant SCINTILLA_ERR_DIFF_MESSAGE (int->onum SCE_ERR_DIFF_MESSAGE))
(defconstant SCINTILLA_BAT_DEFAULT (int->onum SCE_BAT_DEFAULT))
(defconstant SCINTILLA_BAT_COMMENT (int->onum SCE_BAT_COMMENT))
(defconstant SCINTILLA_BAT_WORD (int->onum SCE_BAT_WORD))
(defconstant SCINTILLA_BAT_LABEL (int->onum SCE_BAT_LABEL))
(defconstant SCINTILLA_BAT_HIDE (int->onum SCE_BAT_HIDE))
(defconstant SCINTILLA_BAT_COMMAND (int->onum SCE_BAT_COMMAND))
(defconstant SCINTILLA_BAT_IDENTIFIER (int->onum SCE_BAT_IDENTIFIER))
(defconstant SCINTILLA_BAT_OPERATOR (int->onum SCE_BAT_OPERATOR))
(defconstant SCINTILLA_MAKE_DEFAULT (int->onum SCE_MAKE_DEFAULT))
(defconstant SCINTILLA_MAKE_COMMENT (int->onum SCE_MAKE_COMMENT))
(defconstant SCINTILLA_MAKE_PREPROCESSOR (int->onum SCE_MAKE_PREPROCESSOR))
(defconstant SCINTILLA_MAKE_IDENTIFIER (int->onum SCE_MAKE_IDENTIFIER))
(defconstant SCINTILLA_MAKE_OPERATOR (int->onum SCE_MAKE_OPERATOR))
(defconstant SCINTILLA_MAKE_IDEOL (int->onum SCE_MAKE_IDEOL))
(defconstant SCINTILLA_CONF_DEFAULT (int->onum SCE_CONF_DEFAULT))
(defconstant SCINTILLA_CONF_COMMENT (int->onum SCE_CONF_COMMENT))
(defconstant SCINTILLA_CONF_NUMBER (int->onum SCE_CONF_NUMBER))
(defconstant SCINTILLA_CONF_IDENTIFIER (int->onum SCE_CONF_IDENTIFIER))
(defconstant SCINTILLA_CONF_EXTENSION (int->onum SCE_CONF_EXTENSION))
(defconstant SCINTILLA_CONF_PARAMETER (int->onum SCE_CONF_PARAMETER))
(defconstant SCINTILLA_CONF_STRING (int->onum SCE_CONF_STRING))
(defconstant SCINTILLA_CONF_OPERATOR (int->onum SCE_CONF_OPERATOR))
(defconstant SCINTILLA_CONF_IP (int->onum SCE_CONF_IP))
(defconstant SCINTILLA_CONF_DIRECTIVE (int->onum SCE_CONF_DIRECTIVE))
(defconstant SCINTILLA_AVE_DEFAULT (int->onum SCE_AVE_DEFAULT))
(defconstant SCINTILLA_AVE_COMMENT (int->onum SCE_AVE_COMMENT))
(defconstant SCINTILLA_AVE_NUMBER (int->onum SCE_AVE_NUMBER))
(defconstant SCINTILLA_AVE_WORD (int->onum SCE_AVE_WORD))
(defconstant SCINTILLA_AVE_KEYWORD (int->onum SCE_AVE_KEYWORD))
(defconstant SCINTILLA_AVE_STATEMENT (int->onum SCE_AVE_STATEMENT))
(defconstant SCINTILLA_AVE_STRING (int->onum SCE_AVE_STRING))
(defconstant SCINTILLA_AVE_ENUM (int->onum SCE_AVE_ENUM))
(defconstant SCINTILLA_AVE_STRINGEOL (int->onum SCE_AVE_STRINGEOL))
(defconstant SCINTILLA_AVE_IDENTIFIER (int->onum SCE_AVE_IDENTIFIER))
(defconstant SCINTILLA_AVE_OPERATOR (int->onum SCE_AVE_OPERATOR))
(defconstant SCINTILLA_ADA_DEFAULT (int->onum SCE_ADA_DEFAULT))
(defconstant SCINTILLA_ADA_COMMENT (int->onum SCE_ADA_COMMENT))
(defconstant SCINTILLA_ADA_NUMBER (int->onum SCE_ADA_NUMBER))
(defconstant SCINTILLA_ADA_WORD (int->onum SCE_ADA_WORD))
(defconstant SCINTILLA_ADA_STRING (int->onum SCE_ADA_STRING))
(defconstant SCINTILLA_ADA_CHARACTER (int->onum SCE_ADA_CHARACTER))
(defconstant SCINTILLA_ADA_OPERATOR (int->onum SCE_ADA_OPERATOR))
(defconstant SCINTILLA_ADA_IDENTIFIER (int->onum SCE_ADA_IDENTIFIER))
(defconstant SCINTILLA_ADA_STRINGEOL (int->onum SCE_ADA_STRINGEOL))
(defconstant SCINTILLA_LISP_DEFAULT (int->onum SCE_LISP_DEFAULT))
(defconstant SCINTILLA_LISP_COMMENT (int->onum SCE_LISP_COMMENT))
(defconstant SCINTILLA_LISP_NUMBER (int->onum SCE_LISP_NUMBER))
(defconstant SCINTILLA_LISP_KEYWORD (int->onum SCE_LISP_KEYWORD))
(defconstant SCINTILLA_LISP_STRING (int->onum SCE_LISP_STRING))
(defconstant SCINTILLA_LISP_STRINGEOL (int->onum SCE_LISP_STRINGEOL))
(defconstant SCINTILLA_LISP_IDENTIFIER (int->onum SCE_LISP_IDENTIFIER))
(defconstant SCINTILLA_LISP_OPERATOR (int->onum SCE_LISP_OPERATOR))
(defconstant SCINTILLA_EIFFEL_DEFAULT (int->onum SCE_EIFFEL_DEFAULT))
(defconstant SCINTILLA_EIFFEL_COMMENTLINE (int->onum SCE_EIFFEL_COMMENTLINE))
(defconstant SCINTILLA_EIFFEL_NUMBER (int->onum SCE_EIFFEL_NUMBER))
(defconstant SCINTILLA_EIFFEL_WORD (int->onum SCE_EIFFEL_WORD))
(defconstant SCINTILLA_EIFFEL_STRING (int->onum SCE_EIFFEL_STRING))
(defconstant SCINTILLA_EIFFEL_CHARACTER (int->onum SCE_EIFFEL_CHARACTER))
(defconstant SCINTILLA_EIFFEL_OPERATOR (int->onum SCE_EIFFEL_OPERATOR))
(defconstant SCINTILLA_EIFFEL_IDENTIFIER (int->onum SCE_EIFFEL_IDENTIFIER))
(defconstant SCINTILLA_EIFFEL_STRINGEOL (int->onum SCE_EIFFEL_STRINGEOL))
